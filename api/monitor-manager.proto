syntax = "proto3";

option go_package = "./pb";

package api;

import "timestamp.proto";
import "duration.proto";
// import "ip.proto";

service Monitor {
  rpc GetConfig(GetConfigParams) returns (Config) {}

  // GetServers fetches list of NTP servers to check
  rpc GetServers(GetServersParams) returns (ServerList) {}

  // SubmitResults returns the specified list ServerStatus to the monitoring server
  rpc SubmitResults(ServerStatusList) returns (ServerStatusResult) {}


}

message GetConfigParams {}
message GetServersParams {}

// Config is the server set configuration for the monitoring agent
message Config {
  int32  Samples = 1;
  bytes  IPBytes = 2;
  bytes  IPNatBytes = 3;
  repeated bytes BaseChecks = 4;
  MQTTConfig MQTTConfig = 5;
}

message MQTTConfig {
  bytes Host   = 1;
  int32 Port   = 2;
  bytes JWT    = 3;
  bytes Prefix = 4; // base prefix for topic ("/devel/monitors/" for example)
}

message Server {
  bytes  IPBytes = 1;
  bytes  Ticket = 2;
  bool   Trace = 3;
}

message ServerList {
  Config config  = 1;
  repeated Server Servers = 2;
  bytes BatchID = 3;  // todo future api: move this first
}

message ServerStatusList {
  int32 Version = 1;
  repeated ServerStatus List = 2;
  bytes BatchID = 3;
}

message ServerStatusResult {
  bool Ok = 1;
}

message ServerStatus {
  bytes  Ticket = 1;
  bytes  IPBytes = 2;
  google.protobuf.Timestamp  TS = 3;
  google.protobuf.Duration   Offset = 4;
  google.protobuf.Duration   RTT = 5;
  int32  Stratum = 6;
  sint32 Leap = 7;
  string Error = 8;
  bool   NoResponse = 9;
}

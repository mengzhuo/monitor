syntax = "proto3";

option go_package = "./pb";

package api;

import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
// import "ip.proto";

service Monitor {
  rpc GetConfig(GetConfigParams) returns (Config) {}

  // GetServers fetches list of NTP servers to check
  rpc GetServers(GetServersParams) returns (ServerList) {}

  // SubmitResults returns the specified list ServerStatus to the monitoring server
  rpc SubmitResults(ServerStatusList) returns (ServerStatusResult) {}


}

message GetConfigParams {}
message GetServersParams {}

// Config is the server set configuration for the monitoring agent
message Config {
  int32  samples = 1;
  bytes  ipbytes = 2;
  bytes  ipnatbytes = 3;
  repeated bytes basechecks = 4;
  MQTTConfig mqtt_config = 5;
}

message MQTTConfig {
  bytes host   = 1;
  int32 port   = 2;
  bytes jwt    = 3;
  bytes prefix = 4; // base prefix for topic ("/devel/monitors/" for example)
}

message Server {
  bytes  ipbytes = 1;
  bytes  ticket = 2;
  bool   trace = 3;
}

message ServerList {
  Config config  = 1;
  repeated Server servers = 2;
  bytes batchid = 3;  // todo future api: move this first
}

message ServerStatusList {
  int32 version = 1;
  repeated ServerStatus List = 2;
  bytes batchid = 3;
}

message ServerStatusResult {
  bool ok = 1;
}

message ServerStatus {
  bytes  ticket = 1;
  bytes  ipbytes = 2;
  google.protobuf.Timestamp  ts = 3;
  google.protobuf.Duration   offset = 4;
  google.protobuf.Duration   rtt = 5;
  int32  stratum = 6;
  sint32 leap = 7;
  string error = 8;
  bool   no_response = 9;
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: monitor/v2/monitor_manager.proto

package monitorv2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConfigRequest) Reset() {
	*x = GetConfigRequest{}
	mi := &file_monitor_v2_monitor_manager_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigRequest) ProtoMessage() {}

func (x *GetConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_v2_monitor_manager_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigRequest.ProtoReflect.Descriptor instead.
func (*GetConfigRequest) Descriptor() ([]byte, []int) {
	return file_monitor_v2_monitor_manager_proto_rawDescGZIP(), []int{0}
}

type GetServersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServersRequest) Reset() {
	*x = GetServersRequest{}
	mi := &file_monitor_v2_monitor_manager_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServersRequest) ProtoMessage() {}

func (x *GetServersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_v2_monitor_manager_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServersRequest.ProtoReflect.Descriptor instead.
func (*GetServersRequest) Descriptor() ([]byte, []int) {
	return file_monitor_v2_monitor_manager_proto_rawDescGZIP(), []int{1}
}

// GetConfigResponse is the server set configuration for the monitoring agent
type GetConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Samples       int32                  `protobuf:"varint,1,opt,name=samples,proto3" json:"samples,omitempty"`
	IpBytes       []byte                 `protobuf:"bytes,2,opt,name=ip_bytes,json=ipBytes,proto3" json:"ip_bytes,omitempty"`
	IpNatBytes    []byte                 `protobuf:"bytes,3,opt,name=ip_nat_bytes,json=ipNatBytes,proto3" json:"ip_nat_bytes,omitempty"`
	BaseChecks    [][]byte               `protobuf:"bytes,4,rep,name=base_checks,json=baseChecks,proto3" json:"base_checks,omitempty"`
	MqttConfig    *MQTTConfig            `protobuf:"bytes,5,opt,name=mqtt_config,json=mqttConfig,proto3" json:"mqtt_config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConfigResponse) Reset() {
	*x = GetConfigResponse{}
	mi := &file_monitor_v2_monitor_manager_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigResponse) ProtoMessage() {}

func (x *GetConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_v2_monitor_manager_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigResponse.ProtoReflect.Descriptor instead.
func (*GetConfigResponse) Descriptor() ([]byte, []int) {
	return file_monitor_v2_monitor_manager_proto_rawDescGZIP(), []int{2}
}

func (x *GetConfigResponse) GetSamples() int32 {
	if x != nil {
		return x.Samples
	}
	return 0
}

func (x *GetConfigResponse) GetIpBytes() []byte {
	if x != nil {
		return x.IpBytes
	}
	return nil
}

func (x *GetConfigResponse) GetIpNatBytes() []byte {
	if x != nil {
		return x.IpNatBytes
	}
	return nil
}

func (x *GetConfigResponse) GetBaseChecks() [][]byte {
	if x != nil {
		return x.BaseChecks
	}
	return nil
}

func (x *GetConfigResponse) GetMqttConfig() *MQTTConfig {
	if x != nil {
		return x.MqttConfig
	}
	return nil
}

type MQTTConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Host          []byte                 `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port          int32                  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Jwt           []byte                 `protobuf:"bytes,3,opt,name=jwt,proto3" json:"jwt,omitempty"`
	Prefix        []byte                 `protobuf:"bytes,4,opt,name=prefix,proto3" json:"prefix,omitempty"` // base prefix for topic ("/devel/monitors/" for example)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MQTTConfig) Reset() {
	*x = MQTTConfig{}
	mi := &file_monitor_v2_monitor_manager_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MQTTConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MQTTConfig) ProtoMessage() {}

func (x *MQTTConfig) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_v2_monitor_manager_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MQTTConfig.ProtoReflect.Descriptor instead.
func (*MQTTConfig) Descriptor() ([]byte, []int) {
	return file_monitor_v2_monitor_manager_proto_rawDescGZIP(), []int{3}
}

func (x *MQTTConfig) GetHost() []byte {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *MQTTConfig) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *MQTTConfig) GetJwt() []byte {
	if x != nil {
		return x.Jwt
	}
	return nil
}

func (x *MQTTConfig) GetPrefix() []byte {
	if x != nil {
		return x.Prefix
	}
	return nil
}

type Server struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TestId        []byte                 `protobuf:"bytes,1,opt,name=test_id,json=testId,proto3" json:"test_id,omitempty"`
	Ticket        []byte                 `protobuf:"bytes,2,opt,name=ticket,proto3" json:"ticket,omitempty"`
	IpBytes       []byte                 `protobuf:"bytes,3,opt,name=ip_bytes,json=ipBytes,proto3" json:"ip_bytes,omitempty"`
	Trace         bool                   `protobuf:"varint,4,opt,name=trace,proto3" json:"trace,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Server) Reset() {
	*x = Server{}
	mi := &file_monitor_v2_monitor_manager_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server) ProtoMessage() {}

func (x *Server) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_v2_monitor_manager_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server.ProtoReflect.Descriptor instead.
func (*Server) Descriptor() ([]byte, []int) {
	return file_monitor_v2_monitor_manager_proto_rawDescGZIP(), []int{4}
}

func (x *Server) GetTestId() []byte {
	if x != nil {
		return x.TestId
	}
	return nil
}

func (x *Server) GetTicket() []byte {
	if x != nil {
		return x.Ticket
	}
	return nil
}

func (x *Server) GetIpBytes() []byte {
	if x != nil {
		return x.IpBytes
	}
	return nil
}

func (x *Server) GetTrace() bool {
	if x != nil {
		return x.Trace
	}
	return false
}

type GetServersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BatchId       []byte                 `protobuf:"bytes,1,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	Config        *GetConfigResponse     `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	Servers       []*Server              `protobuf:"bytes,3,rep,name=servers,proto3" json:"servers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServersResponse) Reset() {
	*x = GetServersResponse{}
	mi := &file_monitor_v2_monitor_manager_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServersResponse) ProtoMessage() {}

func (x *GetServersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_v2_monitor_manager_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServersResponse.ProtoReflect.Descriptor instead.
func (*GetServersResponse) Descriptor() ([]byte, []int) {
	return file_monitor_v2_monitor_manager_proto_rawDescGZIP(), []int{5}
}

func (x *GetServersResponse) GetBatchId() []byte {
	if x != nil {
		return x.BatchId
	}
	return nil
}

func (x *GetServersResponse) GetConfig() *GetConfigResponse {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *GetServersResponse) GetServers() []*Server {
	if x != nil {
		return x.Servers
	}
	return nil
}

type SubmitResultsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       int32                  `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	List          []*ServerStatus        `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	BatchId       []byte                 `protobuf:"bytes,3,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitResultsRequest) Reset() {
	*x = SubmitResultsRequest{}
	mi := &file_monitor_v2_monitor_manager_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitResultsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitResultsRequest) ProtoMessage() {}

func (x *SubmitResultsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_v2_monitor_manager_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitResultsRequest.ProtoReflect.Descriptor instead.
func (*SubmitResultsRequest) Descriptor() ([]byte, []int) {
	return file_monitor_v2_monitor_manager_proto_rawDescGZIP(), []int{6}
}

func (x *SubmitResultsRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *SubmitResultsRequest) GetList() []*ServerStatus {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *SubmitResultsRequest) GetBatchId() []byte {
	if x != nil {
		return x.BatchId
	}
	return nil
}

type SubmitResultsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitResultsResponse) Reset() {
	*x = SubmitResultsResponse{}
	mi := &file_monitor_v2_monitor_manager_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitResultsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitResultsResponse) ProtoMessage() {}

func (x *SubmitResultsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_v2_monitor_manager_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitResultsResponse.ProtoReflect.Descriptor instead.
func (*SubmitResultsResponse) Descriptor() ([]byte, []int) {
	return file_monitor_v2_monitor_manager_proto_rawDescGZIP(), []int{7}
}

func (x *SubmitResultsResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type NTPPacket struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	SourceIpBytes      []byte                 `protobuf:"bytes,1,opt,name=source_ip_bytes,json=sourceIpBytes,proto3" json:"source_ip_bytes,omitempty"`
	DestinationIpBytes []byte                 `protobuf:"bytes,2,opt,name=destination_ip_bytes,json=destinationIpBytes,proto3" json:"destination_ip_bytes,omitempty"`
	T1                 *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=t1,proto3" json:"t1,omitempty"`
	T4                 *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=t4,proto3" json:"t4,omitempty"`
	Data               []byte                 `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *NTPPacket) Reset() {
	*x = NTPPacket{}
	mi := &file_monitor_v2_monitor_manager_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NTPPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NTPPacket) ProtoMessage() {}

func (x *NTPPacket) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_v2_monitor_manager_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NTPPacket.ProtoReflect.Descriptor instead.
func (*NTPPacket) Descriptor() ([]byte, []int) {
	return file_monitor_v2_monitor_manager_proto_rawDescGZIP(), []int{8}
}

func (x *NTPPacket) GetSourceIpBytes() []byte {
	if x != nil {
		return x.SourceIpBytes
	}
	return nil
}

func (x *NTPPacket) GetDestinationIpBytes() []byte {
	if x != nil {
		return x.DestinationIpBytes
	}
	return nil
}

func (x *NTPPacket) GetT1() *timestamppb.Timestamp {
	if x != nil {
		return x.T1
	}
	return nil
}

func (x *NTPPacket) GetT4() *timestamppb.Timestamp {
	if x != nil {
		return x.T4
	}
	return nil
}

func (x *NTPPacket) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ServerStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TestId        []byte                 `protobuf:"bytes,1,opt,name=test_id,json=testId,proto3" json:"test_id,omitempty"`
	Ticket        []byte                 `protobuf:"bytes,2,opt,name=ticket,proto3" json:"ticket,omitempty"`
	IpBytes       []byte                 `protobuf:"bytes,3,opt,name=ip_bytes,json=ipBytes,proto3" json:"ip_bytes,omitempty"`
	Error         string                 `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	NoResponse    bool                   `protobuf:"varint,5,opt,name=no_response,json=noResponse,proto3" json:"no_response,omitempty"`
	Ts            *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=ts,proto3" json:"ts,omitempty"`
	Offset        *durationpb.Duration   `protobuf:"bytes,7,opt,name=offset,proto3" json:"offset,omitempty"`
	Rtt           *durationpb.Duration   `protobuf:"bytes,8,opt,name=rtt,proto3" json:"rtt,omitempty"`
	Stratum       int32                  `protobuf:"varint,9,opt,name=stratum,proto3" json:"stratum,omitempty"`
	Leap          int32                  `protobuf:"varint,10,opt,name=leap,proto3" json:"leap,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerStatus) Reset() {
	*x = ServerStatus{}
	mi := &file_monitor_v2_monitor_manager_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerStatus) ProtoMessage() {}

func (x *ServerStatus) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_v2_monitor_manager_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerStatus.ProtoReflect.Descriptor instead.
func (*ServerStatus) Descriptor() ([]byte, []int) {
	return file_monitor_v2_monitor_manager_proto_rawDescGZIP(), []int{9}
}

func (x *ServerStatus) GetTestId() []byte {
	if x != nil {
		return x.TestId
	}
	return nil
}

func (x *ServerStatus) GetTicket() []byte {
	if x != nil {
		return x.Ticket
	}
	return nil
}

func (x *ServerStatus) GetIpBytes() []byte {
	if x != nil {
		return x.IpBytes
	}
	return nil
}

func (x *ServerStatus) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ServerStatus) GetNoResponse() bool {
	if x != nil {
		return x.NoResponse
	}
	return false
}

func (x *ServerStatus) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *ServerStatus) GetOffset() *durationpb.Duration {
	if x != nil {
		return x.Offset
	}
	return nil
}

func (x *ServerStatus) GetRtt() *durationpb.Duration {
	if x != nil {
		return x.Rtt
	}
	return nil
}

func (x *ServerStatus) GetStratum() int32 {
	if x != nil {
		return x.Stratum
	}
	return 0
}

func (x *ServerStatus) GetLeap() int32 {
	if x != nil {
		return x.Leap
	}
	return 0
}

var File_monitor_v2_monitor_manager_proto protoreflect.FileDescriptor

const file_monitor_v2_monitor_manager_proto_rawDesc = "" +
	"\n" +
	" monitor/v2/monitor_manager.proto\x12\n" +
	"monitor.v2\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/duration.proto\"\x12\n" +
	"\x10GetConfigRequest\"\x13\n" +
	"\x11GetServersRequest\"\xc4\x01\n" +
	"\x11GetConfigResponse\x12\x18\n" +
	"\asamples\x18\x01 \x01(\x05R\asamples\x12\x19\n" +
	"\bip_bytes\x18\x02 \x01(\fR\aipBytes\x12 \n" +
	"\fip_nat_bytes\x18\x03 \x01(\fR\n" +
	"ipNatBytes\x12\x1f\n" +
	"\vbase_checks\x18\x04 \x03(\fR\n" +
	"baseChecks\x127\n" +
	"\vmqtt_config\x18\x05 \x01(\v2\x16.monitor.v2.MQTTConfigR\n" +
	"mqttConfig\"^\n" +
	"\n" +
	"MQTTConfig\x12\x12\n" +
	"\x04host\x18\x01 \x01(\fR\x04host\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x05R\x04port\x12\x10\n" +
	"\x03jwt\x18\x03 \x01(\fR\x03jwt\x12\x16\n" +
	"\x06prefix\x18\x04 \x01(\fR\x06prefix\"j\n" +
	"\x06Server\x12\x17\n" +
	"\atest_id\x18\x01 \x01(\fR\x06testId\x12\x16\n" +
	"\x06ticket\x18\x02 \x01(\fR\x06ticket\x12\x19\n" +
	"\bip_bytes\x18\x03 \x01(\fR\aipBytes\x12\x14\n" +
	"\x05trace\x18\x04 \x01(\bR\x05trace\"\x94\x01\n" +
	"\x12GetServersResponse\x12\x19\n" +
	"\bbatch_id\x18\x01 \x01(\fR\abatchId\x125\n" +
	"\x06config\x18\x02 \x01(\v2\x1d.monitor.v2.GetConfigResponseR\x06config\x12,\n" +
	"\aservers\x18\x03 \x03(\v2\x12.monitor.v2.ServerR\aservers\"y\n" +
	"\x14SubmitResultsRequest\x12\x18\n" +
	"\aversion\x18\x01 \x01(\x05R\aversion\x12,\n" +
	"\x04list\x18\x02 \x03(\v2\x18.monitor.v2.ServerStatusR\x04list\x12\x19\n" +
	"\bbatch_id\x18\x03 \x01(\fR\abatchId\"'\n" +
	"\x15SubmitResultsResponse\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\"\xd1\x01\n" +
	"\tNTPPacket\x12&\n" +
	"\x0fsource_ip_bytes\x18\x01 \x01(\fR\rsourceIpBytes\x120\n" +
	"\x14destination_ip_bytes\x18\x02 \x01(\fR\x12destinationIpBytes\x12*\n" +
	"\x02t1\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x02t1\x12*\n" +
	"\x02t4\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x02t4\x12\x12\n" +
	"\x04data\x18\x05 \x01(\fR\x04data\"\xcb\x02\n" +
	"\fServerStatus\x12\x17\n" +
	"\atest_id\x18\x01 \x01(\fR\x06testId\x12\x16\n" +
	"\x06ticket\x18\x02 \x01(\fR\x06ticket\x12\x19\n" +
	"\bip_bytes\x18\x03 \x01(\fR\aipBytes\x12\x14\n" +
	"\x05error\x18\x04 \x01(\tR\x05error\x12\x1f\n" +
	"\vno_response\x18\x05 \x01(\bR\n" +
	"noResponse\x12*\n" +
	"\x02ts\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x02ts\x121\n" +
	"\x06offset\x18\a \x01(\v2\x19.google.protobuf.DurationR\x06offset\x12+\n" +
	"\x03rtt\x18\b \x01(\v2\x19.google.protobuf.DurationR\x03rtt\x12\x18\n" +
	"\astratum\x18\t \x01(\x05R\astratum\x12\x12\n" +
	"\x04leap\x18\n" +
	" \x01(\x05R\x04leap2\x83\x02\n" +
	"\x0eMonitorService\x12J\n" +
	"\tGetConfig\x12\x1c.monitor.v2.GetConfigRequest\x1a\x1d.monitor.v2.GetConfigResponse\"\x00\x12M\n" +
	"\n" +
	"GetServers\x12\x1d.monitor.v2.GetServersRequest\x1a\x1e.monitor.v2.GetServersResponse\"\x00\x12V\n" +
	"\rSubmitResults\x12 .monitor.v2.SubmitResultsRequest\x1a!.monitor.v2.SubmitResultsResponse\"\x00B\x9f\x01\n" +
	"\x0ecom.monitor.v2B\x13MonitorManagerProtoP\x01Z/go.ntppool.org/monitor/gen/monitor/v2;monitorv2\xa2\x02\x03MXX\xaa\x02\n" +
	"Monitor.V2\xca\x02\n" +
	"Monitor\\V2\xe2\x02\x16Monitor\\V2\\GPBMetadata\xea\x02\vMonitor::V2b\x06proto3"

var (
	file_monitor_v2_monitor_manager_proto_rawDescOnce sync.Once
	file_monitor_v2_monitor_manager_proto_rawDescData []byte
)

func file_monitor_v2_monitor_manager_proto_rawDescGZIP() []byte {
	file_monitor_v2_monitor_manager_proto_rawDescOnce.Do(func() {
		file_monitor_v2_monitor_manager_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_monitor_v2_monitor_manager_proto_rawDesc), len(file_monitor_v2_monitor_manager_proto_rawDesc)))
	})
	return file_monitor_v2_monitor_manager_proto_rawDescData
}

var file_monitor_v2_monitor_manager_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_monitor_v2_monitor_manager_proto_goTypes = []any{
	(*GetConfigRequest)(nil),      // 0: monitor.v2.GetConfigRequest
	(*GetServersRequest)(nil),     // 1: monitor.v2.GetServersRequest
	(*GetConfigResponse)(nil),     // 2: monitor.v2.GetConfigResponse
	(*MQTTConfig)(nil),            // 3: monitor.v2.MQTTConfig
	(*Server)(nil),                // 4: monitor.v2.Server
	(*GetServersResponse)(nil),    // 5: monitor.v2.GetServersResponse
	(*SubmitResultsRequest)(nil),  // 6: monitor.v2.SubmitResultsRequest
	(*SubmitResultsResponse)(nil), // 7: monitor.v2.SubmitResultsResponse
	(*NTPPacket)(nil),             // 8: monitor.v2.NTPPacket
	(*ServerStatus)(nil),          // 9: monitor.v2.ServerStatus
	(*timestamppb.Timestamp)(nil), // 10: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),   // 11: google.protobuf.Duration
}
var file_monitor_v2_monitor_manager_proto_depIdxs = []int32{
	3,  // 0: monitor.v2.GetConfigResponse.mqtt_config:type_name -> monitor.v2.MQTTConfig
	2,  // 1: monitor.v2.GetServersResponse.config:type_name -> monitor.v2.GetConfigResponse
	4,  // 2: monitor.v2.GetServersResponse.servers:type_name -> monitor.v2.Server
	9,  // 3: monitor.v2.SubmitResultsRequest.list:type_name -> monitor.v2.ServerStatus
	10, // 4: monitor.v2.NTPPacket.t1:type_name -> google.protobuf.Timestamp
	10, // 5: monitor.v2.NTPPacket.t4:type_name -> google.protobuf.Timestamp
	10, // 6: monitor.v2.ServerStatus.ts:type_name -> google.protobuf.Timestamp
	11, // 7: monitor.v2.ServerStatus.offset:type_name -> google.protobuf.Duration
	11, // 8: monitor.v2.ServerStatus.rtt:type_name -> google.protobuf.Duration
	0,  // 9: monitor.v2.MonitorService.GetConfig:input_type -> monitor.v2.GetConfigRequest
	1,  // 10: monitor.v2.MonitorService.GetServers:input_type -> monitor.v2.GetServersRequest
	6,  // 11: monitor.v2.MonitorService.SubmitResults:input_type -> monitor.v2.SubmitResultsRequest
	2,  // 12: monitor.v2.MonitorService.GetConfig:output_type -> monitor.v2.GetConfigResponse
	5,  // 13: monitor.v2.MonitorService.GetServers:output_type -> monitor.v2.GetServersResponse
	7,  // 14: monitor.v2.MonitorService.SubmitResults:output_type -> monitor.v2.SubmitResultsResponse
	12, // [12:15] is the sub-list for method output_type
	9,  // [9:12] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_monitor_v2_monitor_manager_proto_init() }
func file_monitor_v2_monitor_manager_proto_init() {
	if File_monitor_v2_monitor_manager_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_monitor_v2_monitor_manager_proto_rawDesc), len(file_monitor_v2_monitor_manager_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_monitor_v2_monitor_manager_proto_goTypes,
		DependencyIndexes: file_monitor_v2_monitor_manager_proto_depIdxs,
		MessageInfos:      file_monitor_v2_monitor_manager_proto_msgTypes,
	}.Build()
	File_monitor_v2_monitor_manager_proto = out.File
	file_monitor_v2_monitor_manager_proto_goTypes = nil
	file_monitor_v2_monitor_manager_proto_depIdxs = nil
}

syntax = "proto3";

package monitor.v2;

import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
// import "ip.proto";

service MonitorService {
  rpc GetConfig(GetConfigRequest) returns (GetConfigResponse) {}

  // GetServers fetches list of NTP servers to check
  rpc GetServers(GetServersRequest) returns (GetServersResponse) {}

  // SubmitResults returns the specified list ServerStatus to the monitoring server
  rpc SubmitResults(SubmitResultsRequest) returns (SubmitResultsResponse) {}
}

message GetConfigRequest {}
message GetServersRequest {}

// GetConfigResponse is the server set configuration for the monitoring agent
message GetConfigResponse {
  int32 samples = 1;
  bytes ip_bytes = 2;
  bytes ip_nat_bytes = 3;
  repeated bytes base_checks = 4;
  MQTTConfig mqtt_config = 5;
}

message MQTTConfig {
  bytes host = 1;
  int32 port = 2;
  bytes jwt = 3;
  bytes prefix = 4; // base prefix for topic ("/devel/monitors/" for example)
}

message Server {
  bytes test_id = 1;
  bytes ticket = 2;
  bytes ip_bytes = 3;
  bool trace = 4;
}

message GetServersResponse {
  bytes batch_id = 1;
  GetConfigResponse config = 2;
  repeated Server servers = 3;
}

message SubmitResultsRequest {
  int32 version = 1;
  repeated ServerStatus list = 2;
  bytes batch_id = 3;
}

message SubmitResultsResponse {
  bool ok = 1;
}

message NTPPacket {
  bytes source_ip_bytes = 1;
  bytes destination_ip_bytes = 2;
  google.protobuf.Timestamp t1 = 3;
  google.protobuf.Timestamp t4 = 4;
  bytes data = 5;
}

message ServerStatus {
  bytes test_id = 1;
  bytes ticket = 2;
  bytes ip_bytes = 3;

  string error = 4;
  bool no_response = 5;

  google.protobuf.Timestamp ts = 6;
  google.protobuf.Duration offset = 7;
  google.protobuf.Duration rtt = 8;

  int32 stratum = 9;
  int32 leap = 10;
  // repeated NTPPacket responses = 11;
  // int32 selected_response = 12;
}

// store in results
//  client t1/t4
//   t2/t3
//  leap
//  precision field
//  reference id
//  root delay
//  root dispersion
//  stratum
